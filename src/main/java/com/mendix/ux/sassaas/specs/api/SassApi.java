// This file was generated by swagger-codegen.
//
// WARNING: Code you write here will be lost the next time you update the specification

package com.mendix.ux.sassaas.specs.api;

import com.mendix.ux.sassaas.specs.model.*;

import java.io.File;
import com.mendix.ux.sassaas.specs.model.ErrorResponse;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;

import static org.springframework.http.MediaType.*;

@RequestMapping(value = "/sass", produces = {APPLICATION_JSON_VALUE})
public interface SassApi {
    /* @Api(value = "/sass", description = "The sass API") */


        /**
        * @ApiOperation(value = "", notes = "Returns CSS by compiling an input Sass template", response = File.class)
        * Parameters:
        * @ApiParam(value = "List of variables to apply. For instance: color1@#123|font@Sans") String variables
        * @ApiParam(value = "List of entrypoints to apply. For instance: index.scss@index.css|custom.scss@custom.css") String entrypoints
        * @ApiParam(value = "Type of output. Valid values are: zip or css; default is zip") String output
        *
        * @ApiResponses(value = { 
        *     @ApiResponse(code = 200, message = "Success"),
        *     @ApiResponse(code = 0, message = "Error") })
        **/
        @RequestMapping(value = "",


        method = RequestMethod.GET)
        public File compileSass(@RequestParam(value = "variables", required = false) String variables

,@RequestParam(value = "entrypoints", required = false) String entrypoints

,@RequestParam(value = "output", required = false) String output

)
        throws Exception;
    }
